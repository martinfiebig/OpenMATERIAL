{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Root object for the JSON data structure",
  "properties": {
    "metadata": {
      "type": "object",
      "description": "Metadata about the asset.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the asset."
        },
        "description": {
          "type": "string",
          "description": "Short description of the asset in 2 - 3 sentences."
        },
        "uuid": {
          "type": "string",
          "description": "Universally unique identifier for the asset.",
          "pattern": "^[a-f0-9]{32}$"
        },
        "assetVersion": {
          "type": "string",
          "description": "Version of the asset.",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "openMaterialVersion": {
          "type": "string",
          "description": "Version of OpenMATERIAL.",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "copyright": {
          "type": "string",
          "description": "Copyright information with year and company."
        },
        "license": {
          "type": "string",
          "description": "License information. For common open source licenses, provide an SPDX identifier. For other types of licenses, provide an URL to a webpage with the license or the filename of a separately provided license file."
        },
        "author": {
          "type": "string",
          "description": "Name or email address of the author of this asset. In case of multiple authors, use comma-separation. The author can also be a company name."
        },
        "modelCreationTool": {
          "type": "string",
          "description": "The tool or software used to generate the 3D model of this asset."
        },
        "creationDate": {
          "type": "string",
          "description": "Creation date of the asset in the format YYYYMMDDTHHMMSSZ.",
          "pattern": "^\\d{8}T\\d{6}Z$"
        },
        "modelingMethod": {
          "type": "string",
          "description": "Description how the 3D model was modeled. Was it modeled based on a 3D scan, based on photos, or freehand?"
        },
        "validationDescription": {
          "type": "string",
          "description": "Was the geometry of the 3D model validated against a real-world object? If yes, how?"
        },
        "assetType": {
          "type": "string",
          "description": "Type of the asset out of the following: object (individual object), scene (a collection of multiple objects)",
          "enum": ["object", "scene"]
        },
        "objectClass": {
          "type": "string",
          "description": "The class of the object. This only applies if 'asset_type' == 'object'.",
          "enum": ["vehicle", "human", "road_network", "other"]
        },
        "animated": {
          "type": "boolean",
          "description": "Does the 3D model contain keyframe animations?"
        },
        "pbrMaterialWorkflow": {
          "type": "string",
          "description": "Does the 3D model contain materials for a PBR workflow? If yes, for a metallic or specular workflow?",
          "enum": ["metallic", "specular", "none"]
        },
        "triangleCount": {
          "type": "integer",
          "description": "The number of triangles in the 3D model. One quad counts as two triangles."
        },
        "meshCount": {
          "type": "integer",
          "description": "The number of meshes in the 3D geometry."
        },
        "textureResolutions": {
          "type": "array",
          "description": "List of all texture resolutions in the 3D model. This can include any combination of '1K', '2K', or '4K'.",
          "items": {
            "type": "string",
            "enum": ["1K", "2K", "4K"]
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "normalMapFormat": {
          "type": "string",
          "description": "Does the 3D model have normal maps as textures? If yes, are they using the DirectX format or the OpenGL format?",
          "enum": ["DirectX", "OpenGL", "none"]
        },
        "boundingBox": {
          "type": "object",
          "description": "Axis-aligned bounding box dimensions specifying the minimum and maximum values in x, y, and z direction.",
          "properties": {
            "x": {
              "type": "array",
              "description": "Minimum and maximum values in m in x direction.",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "y": {
              "type": "array",
              "description": "Minimum and maximum values in m in y direction.",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            },
            "z": {
              "type": "array",
              "description": "Minimum and maximum values in m in z direction.",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["x", "y", "z"]
        }
      },
      "required": [
        "name",
        "description",
        "uuid",
        "assetVersion",
        "openMaterialVersion",
        "copyright",
        "license",
        "author",
        "creationDate",
        "assetType",
        "objectClass",
        "animated",
        "pbrMaterialWorkflow",
        "triangleCount",
        "meshCount",
        "textureResolutions",
        "normalMapFormat",
        "boundingBox"
      ]
    },
    "materialMappingUri": {
      "type": "string",
      "description": "Relative path to a material mapping file (.xomm). In this file, material names from the 3D model file or texture color codes from textures assigned in materialTextureAssignment are linked to OpenMATERIAL property files.",
      "pattern": ".*\\.xomm$"
    },
    "materialTextureAssignment": {
      "type": "array",
      "description": "Optional array containing material texture assignments. It links material names contained in the 3D model file to OpenMATERIAL assignment textures. In a separate material mapping file, the 'color' values in this texture are linked to OpenMATERIAL property files.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "Name of the material in the 3D model file."
          },
          {
            "type": "string",
            "description": "File path to the OpenMATERIAL assignment texture. Supported texture formats are png and jpg.",
            "pattern": "^(\\./|/)?([a-zA-Z0-9_\\-./]+)\\.(png|jpg|jpeg)$"
          }
        ],
        "minItems": 2,
        "maxItems": 2
      }
    }
  },
  "required": [
    "metadata"
  ]
}
